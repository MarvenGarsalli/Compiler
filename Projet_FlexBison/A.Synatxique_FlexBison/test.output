Terminals unused in grammar

   Plus
   Minus
   Mult
   DivR
   DivE
   Semicolon
   Mod


State 30 conflicts: 1 shift/reduce


Grammar

    0 $accept: calcul $end

    1 calcul: L_DCL L_I

    2 L_DCL: DCL A

    3 A: L_DCL
    4  | %empty

    5 DCL: Var L_ID Pnts TYPE

    6 L_ID: Ident B

    7 B: Virgule L_ID
    8  | %empty

    9 TYPE: Entier
   10     | Reel

   11 L_I: I C

   12 C: L_I
   13  | %empty

   14 I: Ident Assign E

   15 E: Nb
   16  | Ident
   17  | PO E PF
   18  | E Op E


Terminals, with rules where they appear

$end (0) 0
error (256)
Nb (258) 15
Plus (259)
Minus (260)
Mult (261)
DivR (262)
DivE (263)
Semicolon (264)
Virgule (265) 7
PO (266) 17
PF (267) 17
Mod (268)
Assign (269) 14
Ident (270) 6 14 16
Op (271) 18
Pnts (272) 5
Var (273) 5
Entier (274) 9
Reel (275) 10


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
calcul (22)
    on left: 1, on right: 0
L_DCL (23)
    on left: 2, on right: 1 3
A (24)
    on left: 3 4, on right: 2
DCL (25)
    on left: 5, on right: 2
L_ID (26)
    on left: 6, on right: 5 7
B (27)
    on left: 7 8, on right: 6
TYPE (28)
    on left: 9 10, on right: 5
L_I (29)
    on left: 11, on right: 1 12
C (30)
    on left: 12 13, on right: 11
I (31)
    on left: 14, on right: 11
E (32)
    on left: 15 16 17 18, on right: 14 17 18


State 0

    0 $accept: . calcul $end

    Var  shift, and go to state 1

    calcul  go to state 2
    L_DCL   go to state 3
    DCL     go to state 4


State 1

    5 DCL: Var . L_ID Pnts TYPE

    Ident  shift, and go to state 5

    L_ID  go to state 6


State 2

    0 $accept: calcul . $end

    $end  shift, and go to state 7


State 3

    1 calcul: L_DCL . L_I

    Ident  shift, and go to state 8

    L_I  go to state 9
    I    go to state 10


State 4

    2 L_DCL: DCL . A

    Var  shift, and go to state 1

    $default  reduce using rule 4 (A)

    L_DCL  go to state 11
    A      go to state 12
    DCL    go to state 4


State 5

    6 L_ID: Ident . B

    Virgule  shift, and go to state 13

    $default  reduce using rule 8 (B)

    B  go to state 14


State 6

    5 DCL: Var L_ID . Pnts TYPE

    Pnts  shift, and go to state 15


State 7

    0 $accept: calcul $end .

    $default  accept


State 8

   14 I: Ident . Assign E

    Assign  shift, and go to state 16


State 9

    1 calcul: L_DCL L_I .

    $default  reduce using rule 1 (calcul)


State 10

   11 L_I: I . C

    Ident  shift, and go to state 8

    $default  reduce using rule 13 (C)

    L_I  go to state 17
    C    go to state 18
    I    go to state 10


State 11

    3 A: L_DCL .

    $default  reduce using rule 3 (A)


State 12

    2 L_DCL: DCL A .

    $default  reduce using rule 2 (L_DCL)


State 13

    7 B: Virgule . L_ID

    Ident  shift, and go to state 5

    L_ID  go to state 19


State 14

    6 L_ID: Ident B .

    $default  reduce using rule 6 (L_ID)


State 15

    5 DCL: Var L_ID Pnts . TYPE

    Entier  shift, and go to state 20
    Reel    shift, and go to state 21

    TYPE  go to state 22


State 16

   14 I: Ident Assign . E

    Nb     shift, and go to state 23
    PO     shift, and go to state 24
    Ident  shift, and go to state 25

    E  go to state 26


State 17

   12 C: L_I .

    $default  reduce using rule 12 (C)


State 18

   11 L_I: I C .

    $default  reduce using rule 11 (L_I)


State 19

    7 B: Virgule L_ID .

    $default  reduce using rule 7 (B)


State 20

    9 TYPE: Entier .

    $default  reduce using rule 9 (TYPE)


State 21

   10 TYPE: Reel .

    $default  reduce using rule 10 (TYPE)


State 22

    5 DCL: Var L_ID Pnts TYPE .

    $default  reduce using rule 5 (DCL)


State 23

   15 E: Nb .

    $default  reduce using rule 15 (E)


State 24

   17 E: PO . E PF

    Nb     shift, and go to state 23
    PO     shift, and go to state 24
    Ident  shift, and go to state 25

    E  go to state 27


State 25

   16 E: Ident .

    $default  reduce using rule 16 (E)


State 26

   14 I: Ident Assign E .
   18 E: E . Op E

    Op  shift, and go to state 28

    $default  reduce using rule 14 (I)


State 27

   17 E: PO E . PF
   18  | E . Op E

    PF  shift, and go to state 29
    Op  shift, and go to state 28


State 28

   18 E: E Op . E

    Nb     shift, and go to state 23
    PO     shift, and go to state 24
    Ident  shift, and go to state 25

    E  go to state 30


State 29

   17 E: PO E PF .

    $default  reduce using rule 17 (E)


State 30

   18 E: E . Op E
   18  | E Op E .

    Op  shift, and go to state 28

    Op        [reduce using rule 18 (E)]
    $default  reduce using rule 18 (E)
